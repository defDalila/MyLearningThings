[
  {
    "objectID": "index.html",
    "href": "index.html",
    "title": "My Learning Things",
    "section": "",
    "text": "This is a Quarto website.\nTo learn more about Quarto websites visit https://quarto.org/docs/websites.\n\n1 + 1\n\n[1] 2\n\n\n\n\n\n Back to top"
  },
  {
    "objectID": "src/pages/sass/index.html",
    "href": "src/pages/sass/index.html",
    "title": "My Learning Things",
    "section": "",
    "text": "Segundo a página: Sass é a linguagem de extensão CSS de nível profissional mais madura, estável e poderosa do  mundo.",
    "crumbs": [
      "Home",
      "Introdução"
    ]
  },
  {
    "objectID": "src/my-notes.html",
    "href": "src/my-notes.html",
    "title": "Tópicos dos Resumos",
    "section": "",
    "text": "Learning Sass\n\n\n\n\n\n\n\n\n\n\n\n\n\nNo matching items\n Back to top"
  },
  {
    "objectID": "src/pages/sass/index.html#learning-sass",
    "href": "src/pages/sass/index.html#learning-sass",
    "title": "My Learning Things",
    "section": "",
    "text": "Segundo a página: Sass é a linguagem de extensão CSS de nível profissional mais madura, estável e poderosa do  mundo.",
    "crumbs": [
      "Home",
      "Introdução"
    ]
  },
  {
    "objectID": "src/pages/sass/a1-sass.html",
    "href": "src/pages/sass/a1-sass.html",
    "title": "Noções Básicas de Sass",
    "section": "",
    "text": "Introdução\nSass (Syntactically Awesome Stylesheets) é um pré-processador CSS que adiciona recursos avançados à linguagem, como variáveis, aninhamento, mixins e herança. Ele facilita a escrita e manutenção de folhas de estilo, promovendo um código mais organizado, reutilizável e eficiente.\n\n\n\nPré-processamento\nCom o aumento da complexidade das folhas de estilo CSS, o uso de um pré-processador torna-se essencial. O Sass permite escrever código mais robusto que é, posteriormente, compilado em CSS padrão.\nPara compilar um arquivo Sass em CSS, utiliza-se o terminal:\nsass input.scss output.css\nPara monitorar alterações automaticamente:\nsass --watch input.scss output.css\nTambém é possível monitorar pastas inteiras:\nsass --watch app/sass:public/stylesheets\n\n\n\nSintaxes\nSass possui duas sintaxes:\n\nSCSS (.scss): mais comum, é um superconjunto do CSS.\nSASS (.sass): usa indentação ao invés de chaves e ponto e vírgula.\n\n\n\n\nVariáveis\nPermitem armazenar valores reutilizáveis, como cores e fontes.\n$font-stack: Helvetica, sans-serif;\n$primary-color: #333;\n\nbody {\n  font: 100% $font-stack;\n  color: $primary-color;\n}\n\n\n\nAninhamento\nReflete a hierarquia do HTML, facilitando a leitura do código CSS.\nnav {\n  ul {\n    margin: 0;\n    padding: 0;\n    list-style: none;\n  }\n\n  li {\n    display: inline-block;\n  }\n\n  a {\n    display: block;\n    padding: 6px 12px;\n    text-decoration: none;\n  }\n}\n\n\n\nParciais\nArquivos Sass iniciados com _ que contêm trechos de código reutilizáveis. São importados com @use e não geram CSS diretamente.\n// _partial.scss\n\n\n\nMódulos\nA diretiva @use permite dividir o código em múltiplos arquivos Sass.\n// _base.scss\n$font-stack: Helvetica, sans-serif;\n$primary-color: #333;\n\nbody {\n  font: 100% $font-stack;\n  color: $primary-color;\n}\n\n// styles.scss\n@use 'base';\n\n.inverse {\n  background-color: base.$primary-color;\n  color: white;\n}\n\n\n\nMisturas (Mixins)\nPermitem agrupar regras CSS reutilizáveis. Podem receber parâmetros.\n@mixin theme($theme: DarkGray) {\n  background: $theme;\n  box-shadow: 0 0 1px rgba($theme, .25);\n  color: #fff;\n}\n\n.info {\n  @include theme;\n}\n.alert {\n  @include theme($theme: DarkRed);\n}\n.success {\n  @include theme($theme: DarkGreen);\n}\n\n\n\nHerança (Extend)\nCompartilha estilos entre seletores por meio da diretiva @extend. Pode ser aplicada a classes placeholder (%nome) que só são incluídas quando estendidas.\n%message-shared {\n  border: 1px solid #ccc;\n  padding: 10px;\n  color: #333;\n}\n\n.message {\n  @extend %message-shared;\n}\n\n.success {\n  @extend %message-shared;\n  border-color: green;\n}\n\n\n\nOperadores\nPermitem realizar operações matemáticas com valores CSS.\n@use \"sass:math\";\n\n.container {\n  display: flex;\n}\n\narticle[role=\"main\"] {\n  width: math.div(600px, 960px) * 100%;\n}\n\naside[role=\"complementary\"] {\n  width: math.div(300px, 960px) * 100%;\n  margin-left: auto;\n}\n\n\n\n\n Back to top",
    "crumbs": [
      "Home",
      "Introdução",
      "Noções Básicas de Sass"
    ]
  },
  {
    "objectID": "src/pages/sass/a2-sass.html",
    "href": "src/pages/sass/a2-sass.html",
    "title": "Sintaxe",
    "section": "",
    "text": "O Sass oferece duas sintaxes distintas. Ambas são compatíveis entre si, o que permite que você e sua equipe escolham a que melhor se adapta ao fluxo de trabalho adotado.",
    "crumbs": [
      "Home",
      "Introdução",
      "Src",
      "Pages",
      "Sass",
      "Sintaxe"
    ]
  },
  {
    "objectID": "src/pages/sass/a2-sass.html#scss",
    "href": "src/pages/sass/a2-sass.html#scss",
    "title": "Sintaxe",
    "section": "SCSS",
    "text": "SCSS\nA sintaxe SCSS utiliza a extensão de arquivo .scss. Com poucas exceções, ela é um superconjunto do CSS, o que significa que todo código CSS válido também é considerado válido em SCSS. Por ser mais próxima da sintaxe tradicional do CSS, esta é a forma mais comum e acessível de se utilizar o Sass.\nAbaixo, um exemplo de SCSS:\n\n@mixin button-base() {\n  @include typography(button);\n  @include ripple-surface;\n  @include ripple-radius-bounded;\n\n  display: inline-flex;\n  position: relative;\n  height: $button-height;\n  border: none;\n  vertical-align: middle;\n\n  &:hover {\n    cursor: pointer;\n  }\n\n  &:disabled {\n    color: $mdc-button-disabled-ink-color;\n    cursor: default;\n    pointer-events: none;\n  }\n}\n\nSintaxe Recuada (Sass)\nA sintaxe recuada, que originalmente nomeava a linguagem Sass, utiliza a extensão .sass. Diferente do SCSS, ela não emprega chaves ou ponto e vírgula, adotando o recuo (indentação) como estrutura sintática.\nApesar de suportar os mesmos recursos do SCSS, a sintaxe recuada apresenta restrições, como a impossibilidade de expressões quebradas em múltiplas linhas.\nExemplo em sintaxe recuada:\n@mixin button-base()\n  @include typography(button)\n  @include ripple-surface\n  @include ripple-radius-bounded\n\n  display: inline-flex\n  position: relative\n  height: $button-height\n  border: none\n  vertical-align: middle\n\n  &:hover\n    cursor: pointer\n\n  &:disabled\n    color: $mdc-button-disabled-ink-color\n    cursor: default\n    pointer-events: none\n\n\n\n\n\n\n\nAtenção: a sintaxe recuada não suporta expressões quebradas em várias linhas, conforme identificado no problema #216.",
    "crumbs": [
      "Home",
      "Introdução",
      "Src",
      "Pages",
      "Sass",
      "Sintaxe"
    ]
  },
  {
    "objectID": "src/pages/sass/b1-sass.html",
    "href": "src/pages/sass/b1-sass.html",
    "title": "Estrutura de uma Folha de Estilo",
    "section": "",
    "text": "Assim como o CSS, a maioria das folhas de estilo Sass é composta principalmente por regras de estilo que contêm declarações de propriedade. No entanto, o Sass oferece diversos recursos adicionais que coexistem com essas declarações.",
    "crumbs": [
      "Home",
      "Regras de Estilo",
      "Estrutura de uma Folha de Estilo"
    ]
  },
  {
    "objectID": "src/pages/sass/b1-sass.html#declarações",
    "href": "src/pages/sass/b1-sass.html#declarações",
    "title": "Estrutura de uma Folha de Estilo",
    "section": "Declarações",
    "text": "Declarações\nUma folha de estilo Sass é composta por uma série de declarações, que são avaliadas para construir o CSS resultante. Algumas declarações possuem blocos — definidos por { e } — que contêm outras declarações. Por exemplo, uma regra de estilo é uma declaração com um bloco que, por sua vez, pode conter declarações de propriedade.\nNo SCSS, as instruções são separadas por ponto e vírgula (que é opcional quando a instrução possui bloco). Na sintaxe recuada, elas são separadas apenas por quebras de linha.\n\nDeclarações Universais\nAs declarações a seguir podem ser utilizadas em qualquer parte de uma folha de estilo Sass:\n\nDeclarações de variáveis, como $var: value.\nRegras de controle de fluxo, como @if e @each.\nRegras como @error, @warn e @debug.\n\n\n\nInstruções CSS\nEssas instruções são da formatação do CSS e podem ser utilizadas em qualquer lugar, exceto dentro de uma função definida com @function:\n\nRegras de estilo, como h1 { /* ... */ }.\nRegras CSS (@-rules), como @media e @font-face.\nUso de mixins com @include.\nA regra @at-root.\n\n\n\nDeclarações de Nível Superior\nEssas declarações só podem ser utilizadas no nível superior de uma folha de estilo ou aninhadas dentro de uma instrução CSS de nível superior:\n\nCarregamento de módulos, utilizando @use.\nImportações, utilizando @import.\nDefinições de mixin com @mixin.\nDefinições de função com @function.\n\n\n\nOutras Declarações\n\nDeclarações de propriedade, como width: 100px, devem ser utilizadas dentro de regras de estilo e de algumas regras CSS.\nA regra @extend pode ser utilizada apenas dentro de regras de estilo.",
    "crumbs": [
      "Home",
      "Regras de Estilo",
      "Estrutura de uma Folha de Estilo"
    ]
  },
  {
    "objectID": "src/pages/sass/b1-sass.html#expressões",
    "href": "src/pages/sass/b1-sass.html#expressões",
    "title": "Estrutura de uma Folha de Estilo",
    "section": "Expressões",
    "text": "Expressões\nUma expressão é qualquer valor posicionado à direita de uma declaração de propriedade ou de uma variável. Cada expressão gera um valor. Qualquer valor de propriedade CSS válido também é uma expressão Sass. No entanto, o Sass expande significativamente o poder das expressões, permitindo seu uso em mixins, funções, controle de fluxo com @if e operações aritméticas. Essa sintaxe de expressão é chamada SassScript.\n\nLiterais\nAs expressões mais básicas representam valores estáticos:\n\nNúmeros, com ou sem unidades: 12, 100px.\nStrings, com ou sem aspas: \"Helvetica Neue\", bold.\nCores, por código hexadecimal ou nome: #c6538c, blue.\nBooleanos: true ou false.\nO valor null.\nListas de valores, separados por espaço ou vírgula, com ou sem colchetes: 1.5em 1em 0 2em, Helvetica, Arial, sans-serif, [col1-start].\nMapas, que associam chaves a valores: (\"background\": red, \"foreground\": pink).\n\n\n\nOperações\nO Sass permite diversas operações:\n\n== e != verificam igualdade ou diferença entre valores.\n+, -, *, / e % realizam operações matemáticas com suporte a unidades.\n&lt;, &lt;=, &gt;, &gt;= comparam números.\nand, or, e not funcionam como operadores booleanos. Apenas false e null são considerados falsos.\n+, -, e / podem concatenar strings.\nParênteses ( ) podem ser utilizados para definir precedência de operações.\n\n\n\nOutras Expressões\n\nVariáveis, como $var.\nChamadas de função, como nth($list, 1) ou var(--main-bg-color).\nFunções especiais, como calc(1px + 100%) ou url(http://myapp.com/assets/logo.png).\nO seletor pai, representado por &.\nO valor !important, interpretado como uma string sem aspas.",
    "crumbs": [
      "Home",
      "Regras de Estilo",
      "Estrutura de uma Folha de Estilo"
    ]
  },
  {
    "objectID": "docs/src/pages/sass/index.html",
    "href": "docs/src/pages/sass/index.html",
    "title": "My Learning Things",
    "section": "",
    "text": "Segundo a página: Sass é a linguagem de extensão CSS de nível profissional mais madura, estável e poderosa do  mundo."
  },
  {
    "objectID": "docs/src/pages/sass/index.html#learning-sass",
    "href": "docs/src/pages/sass/index.html#learning-sass",
    "title": "My Learning Things",
    "section": "",
    "text": "Segundo a página: Sass é a linguagem de extensão CSS de nível profissional mais madura, estável e poderosa do  mundo."
  }
]